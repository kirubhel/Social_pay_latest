basePath: /api/v2/
definitions:
  controller.CreateIPWhitelistRequest:
    properties:
      ip_address:
        type: string
    type: object
  controller.ErrorResponse:
    description: Error response
    properties:
      error:
        description: '@Description Error message'
        example: error message
        type: string
    type: object
  controller.UpdateIPWhitelistRequest:
    properties:
      ip_address:
        type: string
      is_active:
        type: boolean
    type: object
  controller.WalletResponse:
    description: Wallet information response
    properties:
      balance:
        description: '@Description Current balance in the wallet'
        example: 1000.5
        type: number
      created_at:
        description: '@Description When the wallet was created'
        example: "2024-05-22T09:00:00Z"
        type: string
      currency:
        description: '@Description Currency code'
        example: ETB
        type: string
      description:
        description: '@Description Optional description of the wallet'
        example: Main merchant wallet
        type: string
      id:
        description: '@Description Unique identifier for the wallet'
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      is_active:
        description: '@Description Whether the wallet is active'
        example: true
        type: boolean
      last_sync_at:
        description: '@Description When the wallet was last synchronized'
        example: "2024-05-22T09:00:00Z"
        type: string
      merchant_id:
        description: '@Description ID of the merchant who owns this wallet'
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      updated_at:
        description: '@Description When the wallet was last updated'
        example: "2024-05-22T09:00:00Z"
        type: string
    type: object
  dto.WebhookRequest:
    properties:
      callbackUrl:
        type: string
      isHostedCheckout:
        type: boolean
      merchantId:
        type: string
      message:
        type: string
      providerData:
        type: string
      providerTxId:
        type: string
      status:
        type: string
      timestamp:
        type: string
      transactionId:
        type: string
      type:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionType'
      userId:
        type: string
    required:
    - callbackUrl
    - merchantId
    - message
    - status
    - timestamp
    - transactionId
    - userId
    type: object
  entity.APIKeyResponse:
    properties:
      can_process_payment:
        type: boolean
      can_withdrawal:
        type: boolean
      created_at:
        type: string
      description:
        type: string
      expires_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      last_used_at:
        type: string
      merchant_id:
        type: string
      name:
        type: string
      public_key:
        type: string
      secret_key:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  entity.APIKeyRotateResponse:
    properties:
      api_key:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_core_entity.APIKey'
      secret_key:
        type: string
    type: object
  entity.APIKeyValidateRequest:
    properties:
      public_key:
        type: string
      secret_key:
        type: string
    required:
    - public_key
    - secret_key
    type: object
  entity.AdminTransactionAnalytics:
    description: Admin transaction analytics with VAT, fees, and admin net information
    properties:
      period_comparison:
        allOf:
        - $ref: '#/definitions/entity.PeriodComparison'
        description: Period comparison (percentage change from previous period)
      total_admin_net:
        type: number
      total_amount:
        type: number
      total_customer_net:
        type: number
      total_deposits:
        allOf:
        - $ref: '#/definitions/entity.TransactionTypeAnalytics'
        description: Transaction type breakdown
      total_fee_amount:
        type: number
      total_merchant_net:
        description: Financial breakdown - Admin specific
        type: number
      total_tips:
        $ref: '#/definitions/entity.TransactionTypeAnalytics'
      total_transactions:
        description: Transaction counts and amounts
        type: integer
      total_vat_amount:
        type: number
      total_withdrawals:
        $ref: '#/definitions/entity.TransactionTypeAnalytics'
    type: object
  entity.AnalyticsFilter:
    description: Parameters for filtering transaction analytics data
    properties:
      amount_max:
        type: number
      amount_min:
        description: '@Description Amount range filter'
        type: number
      end_date:
        description: |-
          @Description End date in ISO 8601 format (YYYY-MM-DD)
          @Example 2023-12-31
        type: string
      medium:
        description: '@Description Payment medium filter'
        items:
          $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionMedium'
        type: array
      merchant_id:
        description: '@Description Merchant ID filter (for admin analytics)'
        items:
          type: string
        type: array
      qr_tag:
        description: '@Description QR tag filter'
        items:
          type: string
        type: array
      source:
        description: '@Description Transaction source filter (QR, DIRECT, HOSTED_CHECKOUT)'
        items:
          $ref: '#/definitions/entity.TransactionSource'
        type: array
      start_date:
        description: |-
          @Description Start date in ISO 8601 format (YYYY-MM-DD)
          @Example 2023-01-01
        type: string
      status:
        description: '@Description Transaction status filter'
        items:
          $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionStatus'
        type: array
      type:
        description: '@Description Transaction type filter'
        items:
          $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionType'
        type: array
    required:
    - end_date
    - start_date
    type: object
  entity.CallbackLog:
    properties:
      created_at:
        type: string
      id:
        type: string
      merchant_id:
        type: string
      message:
        type: string
      request_body:
        type: string
      response_body:
        type: string
      retry_count:
        type: integer
      status:
        type: integer
      txn_id:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  entity.CatalogResponse:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      description:
        $ref: '#/definitions/types.NullString'
      id:
        type: string
      merchant_id:
        type: string
      name:
        type: string
      status:
        $ref: '#/definitions/entity.CatalogStatus'
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  entity.CatalogStatus:
    enum:
    - active
    - inactive
    - draft
    type: string
    x-enum-varnames:
    - CatalogStatusActive
    - CatalogStatusInactive
    - CatalogStatusDraft
  entity.CatalogsResponse:
    properties:
      catalogs:
        items:
          $ref: '#/definitions/entity.CatalogResponse'
        type: array
      count:
        type: integer
    type: object
  entity.ChartData:
    description: Chart data for transaction analytics
    properties:
      chart_type:
        type: string
      data:
        items:
          $ref: '#/definitions/entity.ChartDataPoint'
        type: array
      date_unit:
        $ref: '#/definitions/entity.DateUnit'
      summary:
        $ref: '#/definitions/entity.ChartSummary'
    type: object
  entity.ChartDataPoint:
    properties:
      date:
        type: string
      label:
        type: string
      value:
        type: number
    type: object
  entity.ChartFilter:
    description: Parameters for generating chart data
    properties:
      amount_max:
        type: number
      amount_min:
        description: '@Description Amount range filter'
        type: number
      chart_type:
        description: '@Description Chart type: "amount" for transaction amounts, "count"
          for transaction counts'
        type: string
      date_unit:
        allOf:
        - $ref: '#/definitions/entity.DateUnit'
        description: '@Description Date unit for chart aggregation (day, week, month,
          year)'
      end_date:
        description: |-
          @Description End date in ISO 8601 format (YYYY-MM-DD)
          @Example 2023-12-31
        type: string
      medium:
        description: '@Description Payment medium filter'
        items:
          $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionMedium'
        type: array
      merchant_id:
        description: '@Description Merchant ID filter (for admin analytics)'
        items:
          type: string
        type: array
      qr_tag:
        description: '@Description QR tag filter'
        items:
          type: string
        type: array
      source:
        description: '@Description Transaction source filter (QR, DIRECT, HOSTED_CHECKOUT)'
        items:
          $ref: '#/definitions/entity.TransactionSource'
        type: array
      start_date:
        description: |-
          @Description Start date in ISO 8601 format (YYYY-MM-DD)
          @Example 2023-01-01
        type: string
      status:
        description: '@Description Transaction status filter'
        items:
          $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionStatus'
        type: array
      type:
        description: '@Description Transaction type filter'
        items:
          $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionType'
        type: array
    required:
    - chart_type
    - date_unit
    - end_date
    - start_date
    type: object
  entity.ChartSummary:
    properties:
      average_value:
        type: number
      data_points:
        type: integer
      max_value:
        type: number
      min_value:
        type: number
      total_value:
        type: number
    type: object
  entity.CheckoutPaymentRequest:
    description: Payment request from hosted checkout page
    properties:
      hosted_checkout_id:
        description: |-
          Hosted checkout ID
          @Example 123e4567-e89b-12d3-a456-426614174000
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      medium:
        allOf:
        - $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionMedium'
        description: |-
          Selected payment medium
          @Example MPESA
        example: MPESA,ETHSWITCH
      phone_number:
        description: |-
          Phone number for payment
          @Example 251911111111
        example: "251911111111"
        type: string
      tip_amount:
        description: Optional tip amount
        example: 5
        type: number
      tip_medium:
        allOf:
        - $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionMedium'
        description: Tip payment method (required if tip amount > 0)
        example: TELEBIRR
      tipee_phone:
        description: Tipee phone number (required if tip amount > 0)
        example: "251911234568"
        type: string
    type: object
  entity.CommissionSettings:
    properties:
      cent:
        type: number
      percent:
        type: number
    type: object
  entity.CreateAPIKeyRequest:
    properties:
      can_process_payment:
        type: boolean
      can_withdrawal:
        type: boolean
      description:
        type: string
      expires_at:
        $ref: '#/definitions/entity.CustomTime'
      name:
        type: string
    required:
    - name
    type: object
  entity.CreateCatalogRequest:
    properties:
      description:
        $ref: '#/definitions/types.NullString'
      name:
        type: string
      status:
        type: string
    required:
    - name
    type: object
  entity.CreateCustomerRequest:
    properties:
      address:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      loyalty_points:
        type: integer
      merchant_id:
        type: string
      name:
        type: string
      phone_number:
        type: string
      status:
        type: string
    required:
    - email
    - merchant_id
    - name
    type: object
  entity.CreateMerchantDocumnetRequest:
    properties:
      document_type:
        type: string
      file_url:
        type: string
      status:
        type: string
    type: object
  entity.CreateMerchantPersonalInformationRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
    type: object
  entity.CreateOrderRequest:
    properties:
      customer_details:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.CustomerDetails'
      merchant_id:
        type: string
      metadata:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Metadata'
      order_details:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.OrderDetails'
      order_items:
        items:
          $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.OrderItem'
        type: array
      tracking:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Tracking'
    required:
    - customer_details
    - merchant_id
    - order_details
    - order_items
    type: object
  entity.CreatePaymentMethodRequest:
    properties:
      commission:
        type: number
      details:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      type:
        type: string
    required:
    - name
    - type
    type: object
  entity.CreatePermissionRequest:
    properties:
      effect:
        type: string
      operations:
        items:
          type: string
        type: array
      resource_id:
        type: string
    required:
    - effect
    - operations
    - resource_id
    type: object
  entity.CreateProductRequest:
    properties:
      currency:
        type: string
      description:
        type: string
      dimensions:
        type: string
      image_url:
        type: string
      name:
        type: string
      price:
        type: number
      sku:
        type: string
      status:
        type: string
      weight:
        type: number
    required:
    - currency
    - name
    - price
    - sku
    type: object
  entity.CreateQRLinkRequest:
    description: Request to create a new QR payment link
    properties:
      amount:
        description: Amount for STATIC type QR links
        example: 100.5
        type: number
      description:
        description: Optional description
        example: Payment for shop items
        type: string
      image_url:
        description: Optional image URL
        example: https://example.com/image.jpg
        type: string
      is_tip_enabled:
        description: Whether tipping is enabled
        example: true
        type: boolean
      supported_methods:
        description: Supported payment methods
        example:
        - '["MPESA"'
        - '"TELEBIRR"]'
        items:
          $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionMedium'
        type: array
      tag:
        allOf:
        - $ref: '#/definitions/entity.QRLinkTag'
        description: QR link category
        example: SHOP
      title:
        description: Optional title
        example: My Shop Payment
        type: string
      type:
        allOf:
        - $ref: '#/definitions/entity.QRLinkType'
        description: Type of QR link (DYNAMIC or STATIC)
        example: DYNAMIC
    type: object
  entity.CreateWarehouseRequest:
    properties:
      capacity:
        type: integer
      description:
        type: string
      is_active:
        type: boolean
      location:
        type: string
      name:
        type: string
      status:
        type: string
    required:
    - location
    - name
    type: object
  entity.CustomTime:
    properties:
      time.Time:
        type: string
    type: object
  entity.CustomerResponse:
    properties:
      address:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      customer_id:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      id:
        type: string
      loyalty_points:
        type: integer
      merchant_id:
        type: string
      name:
        type: string
      phone:
        type: string
      status:
        $ref: '#/definitions/entity.CustomerStatus'
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  entity.CustomerStatus:
    enum:
    - active
    - inactive
    - blocked
    type: string
    x-enum-varnames:
    - CustomerStatusActive
    - CustomerStatusInactive
    - CustomerStatusBlocked
  entity.CustomersResponse:
    properties:
      count:
        type: integer
      customers:
        items:
          $ref: '#/definitions/entity.CustomerResponse'
        type: array
    type: object
  entity.DataFormat:
    enum:
    - pdf
    type: string
    x-enum-varnames:
    - FORMATPDF
  entity.DateUnit:
    enum:
    - day
    - week
    - month
    - year
    type: string
    x-enum-varnames:
    - DAY
    - WEEK
    - MONTH
    - YEAR
  entity.DirectPaymentRequest:
    description: Payment request details for processing a direct payment
    properties:
      amount:
        description: |-
          Amount to be paid
          @Example 1000.50
        example: 1000.5
        type: number
      callback_url:
        description: |-
          URL to receive payment status updates
          @Example https://example.com/callback
        example: https://example.com/callback
        type: string
      currency:
        description: |-
          Three-letter currency code
          @Example ETB
        example: ETB
        type: string
      description:
        description: |-
          Description of the payment
          @Example Payment for order #123
        example: 'Payment for order #123'
        type: string
      details:
        allOf:
        - $ref: '#/definitions/entity.TransactionDetails'
        description: Additional payment details
      medium:
        allOf:
        - $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionMedium'
        description: |-
          Payment medium/provider to use
          @Example MPESA
        example: MPESA
      merchant_pays_fee:
        description: |-
          Indicates who should pay the fee (true for merchant, false for customer)
          @Example false
        example: false
        type: boolean
      phone_number:
        description: |-
          Phone number to be paid
          @Example 251911111111
        example: "251911111111"
        type: string
      redirects:
        allOf:
        - $ref: '#/definitions/entity.TransactionRedirects'
        description: URLs for payment redirects
      reference:
        description: |-
          Merchant ID
          @Example 1234567890
        example: "1234567890"
        type: string
    type: object
  entity.FilterParameters:
    description: Parameters for filtering transaction data
    properties:
      end_date:
        description: |-
          @Description End date in ISO 8601 format (YYYY-MM-DD)
          @Example 2023-12-31
        type: string
      format:
        $ref: '#/definitions/entity.DataFormat'
      socialpay_tx_id:
        description: Searching
        type: string
      medium:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionMedium'
      merchant_id:
        description: optional
        type: string
      provider_tx_id:
        description: optional
        type: string
      reference_id:
        description: optional
        type: string
      sort:
        description: |-
          Sort
          @Description ASC or DESC
        type: string
      start_date:
        description: |-
          @Description Start date in ISO 8601 format (YYYY-MM-DD)
          @Example 2023-01-01
        type: string
      status:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionStatus'
      type:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionType'
    type: object
  entity.HostedCheckoutRequest:
    description: Hosted checkout request details for creating a payment link
    properties:
      accept_tip:
        example: false
        type: boolean
      amount:
        description: |-
          Amount to be paid
          @Example 1000.50
        example: 1000.5
        type: number
      callback_url:
        description: |-
          URL to receive payment status updates
          @Example https://example.com/callback
        example: https://example.com/callback
        type: string
      currency:
        description: |-
          Three-letter currency code
          @Example ETB
        example: ETB
        type: string
      description:
        description: |-
          Description of the payment
          @Example Payment for order #123
        example: 'Payment for order #123'
        type: string
      expires_at:
        description: |-
          Optional expiry date time in UTC (ISO 8601 format)
          @Example 2024-12-31T23:59:59Z
        example: "2024-12-31T23:59:59Z"
        type: string
      merchant_pays_fee:
        description: |-
          Indicates who should pay the fee (true for merchant, false for customer)
          @Example false
        example: false
        type: boolean
      phone_number:
        description: |-
          Optional phone number (can be pre-filled)
          @Example 251911111111
        example: "251911111111"
        type: string
      redirects:
        allOf:
        - $ref: '#/definitions/entity.TransactionRedirects'
        description: URLs for payment redirects
      reference:
        description: |-
          Merchant reference
          @Example ORDER123456
        example: ORDER123456
        type: string
      supported_mediums:
        description: |-
          Supported payment mediums
          @Example ["MPESA", "TELEBIRR", "CBE"]
        example:
        - '["MPESA"'
        - ' "TELEBIRR"'
        - ' "CBE"'
        - '"ETHSWITCH"]'
        items:
          $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionMedium'
        type: array
    type: object
  entity.HostedCheckoutWithMerchantResponseDTO:
    description: Response containing hosted checkout information and merchant details
      for the checkout page
    properties:
      accept_tip:
        type: boolean
      amount:
        description: Payment details
        example: 1000.5
        type: number
      created_at:
        example: "2024-05-03T10:00:00Z"
        type: string
      currency:
        example: ETB
        type: string
      description:
        example: 'Payment for order #123'
        type: string
      expires_at:
        example: "2024-05-04T10:00:00Z"
        type: string
      failed_url:
        example: https://example.com/failed
        type: string
      id:
        description: Unique identifier for the hosted checkout
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      merchant:
        allOf:
        - $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_v2_merchant_core_entity.Merchant'
        description: Merchant information
      merchant_pays_fee:
        description: |-
          Indicates who should pay the fee (true for merchant, false for customer)
          @Example false
        example: false
        type: boolean
      phone_number:
        description: Optional pre-filled phone number
        example: "251911111111"
        type: string
      reference:
        example: ORDER123456
        type: string
      status:
        description: Status and timestamps
        example: PENDING
        type: string
      success_url:
        description: URLs for redirects
        example: https://example.com/success
        type: string
      supported_mediums:
        description: Supported payment mediums
        example:
        - '["MPESA"'
        - ' "TELEBIRR"'
        - ' "CBE"]'
        items:
          $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionMedium'
        type: array
    type: object
  entity.MerchantCommission:
    properties:
      commission_active:
        type: boolean
      commission_cent:
        type: number
      commission_percent:
        type: number
      merchant_id:
        type: string
    type: object
  entity.MerchantGrowthAnalytics:
    description: Merchant growth analytics and statistics
    properties:
      activated_merchants_this_period:
        type: integer
      active_merchant_growth:
        type: number
      active_merchants:
        type: integer
      deactivated_merchants_this_period:
        type: integer
      growth_data:
        description: Time series data for charts
        items:
          $ref: '#/definitions/entity.MerchantGrowthDataPoint'
        type: array
      inactive_merchants:
        type: integer
      new_merchants_this_period:
        description: Period breakdown
        type: integer
      pending_merchants:
        type: integer
      total_merchant_growth:
        description: Growth rates (percentage change from previous period)
        type: number
      total_merchants:
        description: Current counts
        type: integer
    type: object
  entity.MerchantGrowthDataPoint:
    properties:
      active_merchants:
        type: integer
      date:
        type: string
      label:
        type: string
      new_merchants:
        type: integer
      total_merchants:
        type: integer
    type: object
  entity.OrderResponse:
    properties:
      customer_details:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.CustomerDetails'
      id:
        type: string
      merchant_id:
        type: string
      metadata:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Metadata'
      order_details:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.OrderDetails'
      order_items:
        items:
          $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.OrderItem'
        type: array
      tracking:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Tracking'
    type: object
  entity.OrderStatus:
    enum:
    - pending
    - processing
    - completed
    - cancelled
    - refunded
    type: string
    x-enum-varnames:
    - OrderStatusPending
    - OrderStatusProcessing
    - OrderStatusCompleted
    - OrderStatusCancelled
    - OrderStatusRefunded
  entity.OrdersResponse:
    properties:
      count:
        type: integer
      orders:
        items:
          $ref: '#/definitions/entity.OrderResponse'
        type: array
    type: object
  entity.PaymentMethodResponse:
    properties:
      commission:
        type: number
      created_at:
        type: string
      created_by:
        type: string
      details:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      merchant_id:
        type: string
      name:
        type: string
      type:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  entity.PaymentMethodsResponse:
    properties:
      count:
        type: integer
      payment_methods:
        items:
          $ref: '#/definitions/entity.PaymentMethodResponse'
        type: array
    type: object
  entity.PaymentResponse:
    description: Response containing payment processing results
    properties:
      socialpay_transaction_id:
        description: SocialPay transaction ID
        example: "1234567890"
        type: string
      merchant_pays_fee:
        description: MerchantPays fee flag
        example: false
        type: boolean
      message:
        description: Human-readable message about the operation
        example: Payment initiated successfully
        type: string
      payment_url:
        description: URL to redirect the user for payment (if applicable)
        example: https://pay.example.com/checkout
        type: string
      reference_id:
        description: Unique payment reference
        example: PAY123456789
        type: string
      status:
        description: Status of the payment
        example: PENDING
        type: string
      success:
        description: Whether the operation was successful
        example: true
        type: boolean
    type: object
  entity.PaymentStatus:
    enum:
    - pending
    - paid
    - failed
    - refunded
    - partially_paid
    type: string
    x-enum-varnames:
    - PaymentStatusPending
    - PaymentStatusPaid
    - PaymentStatusFailed
    - PaymentStatusRefunded
    - PaymentStatusPartiallyPaid
  entity.PeriodComparison:
    properties:
      amount_change:
        type: number
      merchant_net_change:
        type: number
      transaction_count_change:
        type: number
    type: object
  entity.ProductResponse:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      currency:
        type: string
      description:
        type: string
      dimensions:
        type: string
      id:
        type: string
      image_url:
        type: string
      merchant_id:
        type: string
      name:
        type: string
      price:
        type: number
      sku:
        type: string
      status:
        $ref: '#/definitions/entity.ProductStatus'
      updated_at:
        type: string
      updated_by:
        type: string
      weight:
        type: number
    type: object
  entity.ProductStatus:
    enum:
    - active
    - inactive
    - draft
    - archived
    type: string
    x-enum-varnames:
    - ProductStatusActive
    - ProductStatusInactive
    - ProductStatusDraft
    - ProductStatusArchived
  entity.ProductsResponse:
    properties:
      count:
        type: integer
      products:
        items:
          $ref: '#/definitions/entity.ProductResponse'
        type: array
    type: object
  entity.QRLinkResponse:
    description: Response containing QR link details
    properties:
      amount:
        description: Only for STATIC type
        type: number
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      image_url:
        type: string
      is_active:
        type: boolean
      is_tip_enabled:
        type: boolean
      merchant_id:
        type: string
      payment_url:
        description: Payment URL for the QR link
        example: https://checkout.socialpay.co/qr/123e4567-e89b-12d3-a456-426614174000
        type: string
      qr_code_url:
        description: URL to display QR code
        example: https://api.socialpay.co/qr/display/123e4567-e89b-12d3-a456-426614174000
        type: string
      supported_methods:
        items:
          $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionMedium'
        type: array
      tag:
        $ref: '#/definitions/entity.QRLinkTag'
      title:
        type: string
      type:
        $ref: '#/definitions/entity.QRLinkType'
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  entity.QRLinkTag:
    enum:
    - RESTAURANT
    - DONATION
    - SHOP
    type: string
    x-enum-varnames:
    - RESTAURANT
    - DONATION
    - SHOP
  entity.QRLinkType:
    enum:
    - DYNAMIC
    - STATIC
    type: string
    x-enum-varnames:
    - DYNAMIC
    - STATIC
  entity.QRLinksListResponse:
    description: Paginated list of QR links
    properties:
      limit:
        type: integer
      page:
        type: integer
      qr_links:
        items:
          $ref: '#/definitions/entity.QRLinkResponse'
        type: array
      total:
        type: integer
    type: object
  entity.QRMerchantPaymentRequest:
    description: QR Payment request details for processing a payment from checkout
    properties:
      amount:
        description: |-
          Amount to be paid
          @Example 1000.50
        example: 1000.5
        type: number
      currency:
        description: |-
          Optional: Three-letter currency code (defaults to ETB)
          @Example ETB
        example: ETB
        type: string
      description:
        description: |-
          Optional: Description of the payment
          @Example Payment for order #123
        example: 'Payment for order #123'
        type: string
      medium:
        allOf:
        - $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionMedium'
        description: |-
          Payment medium/provider to use
          @Example MPESA
        example: MPESA
      merchant_id:
        description: |-
          Merchant ID
          @Example 123e4567-e89b-12d3-a456-426614174000
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      phone_number:
        description: |-
          Optional: Phone number to be paid
          @Example 251911111111
        example: "251911111111"
        type: string
      reference:
        description: |-
          Optional: Client-provided reference
          @Example ORDER123456
        example: ORDER123456
        type: string
    type: object
  entity.QRPaymentRequest:
    description: Request to make a payment using a QR link
    properties:
      amount:
        description: Amount for DYNAMIC QR links (ignored for STATIC)
        example: 50
        type: number
      medium:
        allOf:
        - $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionMedium'
        description: Payment method/provider
        example: MPESA
      merchant_pays_fee:
        description: MerchantPaysFee indicates if the merchant pays the transaction
          fee
        example: false
        type: boolean
      phone_number:
        description: Payer's phone number
        example: "251911234567"
        type: string
      tip_amount:
        description: Optional tip amount
        example: 5
        type: number
      tip_medium:
        allOf:
        - $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionMedium'
        description: Tip payment method (required if tip amount > 0)
        example: TELEBIRR
      tipee_phone:
        description: Tipee phone number (required if tip amount > 0)
        example: "251911234568"
        type: string
    type: object
  entity.SupportedFileType:
    enum:
    - csv
    - xlsx
    - json
    type: string
    x-enum-varnames:
    - CSV
    - XLSX
    - JSON
  entity.TransactionAnalytics:
    description: Aggregated transaction analytics data
    properties:
      period_comparison:
        allOf:
        - $ref: '#/definitions/entity.PeriodComparison'
        description: Period comparison (percentage change from previous period)
      total_amount:
        type: number
      total_deposits:
        allOf:
        - $ref: '#/definitions/entity.TransactionTypeAnalytics'
        description: Transaction type breakdown
      total_merchant_net:
        description: Financial breakdown
        type: number
      total_tips:
        $ref: '#/definitions/entity.TransactionTypeAnalytics'
      total_transactions:
        description: Transaction counts and amounts
        type: integer
      total_withdrawals:
        $ref: '#/definitions/entity.TransactionTypeAnalytics'
    type: object
  entity.TransactionDetails:
    description: Additional details specific to the transaction
    properties:
      item_description:
        description: Item description
        example: Item description
        type: string
      item_id:
        description: Item price
        example: "1234567890"
        type: string
      item_name:
        description: Item name
        example: Item name
        type: string
      item_quantity:
        description: Item quantity
        example: 1
        type: integer
    type: object
  entity.TransactionRedirects:
    description: URLs for redirecting users after payment
    properties:
      failed:
        description: URL to redirect on failed payment
        example: https://example.com/failed
        type: string
      success:
        description: URL to redirect on successful payment
        example: https://example.com/success
        type: string
    type: object
  entity.TransactionResponseDTO:
    description: API response containing transaction information
    properties:
      admin_net:
        description: Admin net amount
        example: 5
        type: number
      amount:
        description: Transaction amount
        example: 1000.5
        type: number
      callback_url:
        description: Callback URL
        example: https://example.com/callback
        type: string
      comment:
        description: Additional comment
        example: 'Payment for order #123'
        type: string
      created_at:
        description: Creation timestamp
        example: "2024-05-03T10:00:00Z"
        type: string
      currency:
        description: Currency code
        example: ETB
        type: string
      description:
        description: Transaction description
        example: Payment for service
        type: string
      details:
        description: Additional transaction details
      failed_url:
        description: Failed redirect URL
        example: https://example.com/failed
        type: string
      fee_amount:
        description: Fee amount
        example: 10
        type: number
      id:
        description: Unique identifier for the transaction
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      medium:
        allOf:
        - $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionMedium'
        description: Payment medium used
        example: MPESA
      merchant:
        allOf:
        - $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_v2_merchant_core_entity.Merchant'
        description: Merchant information
      merchant_id:
        description: Merchant ID
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      merchant_net:
        description: Merchant net amount
        example: 970.5
        type: number
      phone_number:
        description: Phone number of the payer
        example: "+251911234567"
        type: string
      reference:
        description: Reference code
        example: REF123456
        type: string
      reference_number:
        description: Reference number
        example: TXN123456
        type: string
      status:
        allOf:
        - $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionStatus'
        description: Current status
        example: SUCCESS
      success_url:
        description: Success redirect URL
        example: https://example.com/success
        type: string
      test:
        description: Whether this is a test transaction
        example: false
        type: boolean
      token:
        description: Security token
        example: tok_123456
        type: string
      total_amount:
        description: Total amount
        example: 1000.5
        type: number
      type:
        allOf:
        - $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionType'
        description: Type of transaction
        example: SALE
      updated_at:
        description: Last update timestamp
        example: "2024-05-03T10:01:00Z"
        type: string
      user_id:
        description: User ID associated with the transaction
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      vat_amount:
        description: VAT amount
        example: 15
        type: number
      verified:
        description: Whether the transaction is verified
        example: true
        type: boolean
      webhook_received:
        description: webhook_received
        example: false
        type: boolean
    type: object
  entity.TransactionSource:
    description: Source of the transaction (e.g., DIRECT, QR_PAYMENT)
    enum:
    - DIRECT
    - HOSTED_CHECKOUT
    - QR_PAYMENT
    - WITHDRAWAL
    type: string
    x-enum-comments:
      DIRECT: Direct API calls
      HOSTED_CHECKOUT: Hosted checkout page
      QR_PAYMENT: QR payment link
      WITHDRAWAL_TIP: Withdrawal/tip transactions
    x-enum-varnames:
    - DIRECT
    - HOSTED_CHECKOUT
    - QR_PAYMENT
    - WITHDRAWAL_TIP
  entity.TransactionTypeAnalytics:
    properties:
      amount:
        type: number
      count:
        type: integer
    type: object
  entity.UpdateAPIKeyRequest:
    properties:
      can_process_payment:
        type: boolean
      can_withdrawal:
        type: boolean
      description:
        type: string
      expires_at:
        $ref: '#/definitions/entity.CustomTime'
      is_active:
        type: boolean
      name:
        type: string
    type: object
  entity.UpdateCatalogRequest:
    properties:
      description:
        $ref: '#/definitions/types.NullString'
      name:
        type: string
      status:
        $ref: '#/definitions/entity.CatalogStatus'
    type: object
  entity.UpdateCustomerRequest:
    properties:
      address:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      loyalty_points:
        type: integer
      name:
        type: string
      phone:
        type: string
      status:
        type: string
    type: object
  entity.UpdateHostedCheckoutRequest:
    description: Request for updating hosted checkout details (only allowed when status
      is PENDING)
    properties:
      amount:
        description: |-
          Amount to be paid
          @Example 1000.50
        example: 1000.5
        type: number
      callback_url:
        description: |-
          URL to receive payment status updates
          @Example https://example.com/callback
        example: https://example.com/callback
        type: string
      currency:
        description: |-
          Three-letter currency code
          @Example ETB
        example: ETB
        type: string
      description:
        description: |-
          Description of the payment
          @Example Payment for order #123
        example: 'Payment for order #123'
        type: string
      expires_at:
        description: |-
          Optional expiry date time in UTC (ISO 8601 format)
          @Example 2024-12-31T23:59:59Z
        example: "2024-12-31T23:59:59Z"
        type: string
      merchant_pays_fee:
        description: |-
          Indicates who should pay the fee (true for merchant, false for customer)
          @Example false
        example: false
        type: boolean
      phone_number:
        description: |-
          Optional phone number (can be pre-filled)
          @Example 251911111111
        example: "251911111111"
        type: string
      redirects:
        allOf:
        - $ref: '#/definitions/entity.TransactionRedirects'
        description: URLs for payment redirects
      supported_mediums:
        description: |-
          Supported payment mediums
          @Example ["MPESA", "TELEBIRR", "CBE"]
        example:
        - '["MPESA"'
        - ' "TELEBIRR"'
        - ' "CBE"]'
        items:
          $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionMedium'
        type: array
    type: object
  entity.UpdateMerchantBusinessInformationRequest:
    properties:
      business_registration_number:
        type: string
      business_type:
        type: string
      established_date:
        type: string
      industry_category:
        type: string
      is_betting_company:
        type: boolean
      legal_name:
        type: string
      lottery_certificate_number:
        type: string
      mode:
        type: string
      status:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_v2_merchant_core_entity.MerchantStatus'
      tax_identification_number:
        type: string
      trading_name:
        type: string
      website_url:
        type: string
    type: object
  entity.UpdateMerchantDocumentWithIDRequest:
    properties:
      document_type:
        type: string
      file_url:
        type: string
      id:
        type: string
      status:
        type: string
    type: object
  entity.UpdateOrderRequest:
    properties:
      customer_details:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.CustomerDetails'
      metadata:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Metadata'
      order_details:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.OrderDetails'
      order_items:
        items:
          $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.OrderItem'
        type: array
      tracking:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Tracking'
    type: object
  entity.UpdatePaymentMethodRequest:
    properties:
      commission:
        type: number
      details:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      type:
        type: string
    type: object
  entity.UpdateProductRequest:
    properties:
      currency:
        type: string
      description:
        type: string
      dimensions:
        type: string
      image_url:
        type: string
      name:
        type: string
      price:
        type: number
      sku:
        type: string
      status:
        type: string
      weight:
        type: number
    type: object
  entity.UpdateQRLinkRequest:
    description: Request to update an existing QR payment link
    properties:
      amount:
        description: Amount for STATIC type QR links
        example: 150.75
        type: number
      description:
        description: Description
        example: Updated payment description
        type: string
      image_url:
        description: Image URL
        example: https://example.com/new-image.jpg
        type: string
      is_active:
        description: Whether QR link is active
        example: true
        type: boolean
      is_tip_enabled:
        description: Whether tipping is enabled
        example: false
        type: boolean
      supported_methods:
        description: Supported payment methods
        items:
          $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionMedium'
        type: array
      tag:
        allOf:
        - $ref: '#/definitions/entity.QRLinkTag'
        description: QR link category
        example: RESTAURANT
      title:
        description: Title
        example: Updated Shop Payment
        type: string
    type: object
  entity.UpdateUserRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        minLength: 8
        type: string
      password_hint:
        type: string
      phone_number:
        type: string
      phone_prefix:
        type: string
      title:
        type: string
    type: object
  entity.UpdateWarehouseRequest:
    properties:
      capacity:
        type: integer
      description:
        type: string
      is_active:
        type: boolean
      location:
        type: string
      name:
        type: string
      status:
        type: string
    type: object
  entity.WarehouseResponse:
    properties:
      capacity:
        type: integer
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      location:
        type: string
      merchant_id:
        type: string
      name:
        type: string
      status:
        $ref: '#/definitions/entity.WarehouseStatus'
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  entity.WarehouseStatus:
    enum:
    - active
    - inactive
    type: string
    x-enum-varnames:
    - WarehouseStatusActive
    - WarehouseStatusInactive
  entity.WarehousesResponse:
    properties:
      count:
        type: integer
      warehouses:
        items:
          $ref: '#/definitions/entity.WarehouseResponse'
        type: array
    type: object
  entity.WithdrawalRequest:
    description: Withdrawal request details
    properties:
      amount:
        description: Amount to withdraw
        example: 500
        type: number
      callback_url:
        description: |-
          URL to receive payment status updates
          @Example https://example.com/callback
        example: https://example.com/callback
        type: string
      currency:
        description: Three-letter currency code
        example: ETB
        type: string
      medium:
        allOf:
        - $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionMedium'
        description: |-
          Payment medium/provider to use
          @Example MPESA
        example: MPESA
      merchant_pays_fee:
        description: |-
          MerchantPays fee flag
          Indicates who should pay the fee (true for merchant, false for customer)
        example: false
        type: boolean
      phone_number:
        description: Bank account number
        example: "1234567890"
        type: string
      reference:
        description: Client-provided reference
        example: WD123456789
        type: string
    type: object
  gin.AddMerchantRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      password_hint:
        type: string
      phone_number:
        type: string
      phone_prefix:
        type: string
      title:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - phone_number
    - phone_prefix
    - title
    type: object
  gin.AdminLoginRequest:
    properties:
      password:
        type: string
      phone_number:
        type: string
      phone_prefix:
        type: string
    required:
    - password
    - phone_number
    - phone_prefix
    type: object
  gin.AwashCallback:
    properties:
      amount:
        type: number
      dateApproved:
        type: string
      dateRequested:
        type: string
      externalReference:
        type: string
      payerPhone:
        type: string
      returnCode:
        type: integer
      returnMessage:
        type: string
      status:
        type: string
      transactionId:
        type: string
    type: object
  gin.CreateGroupRequest:
    properties:
      description:
        type: string
      permissions:
        items:
          $ref: '#/definitions/entity.CreatePermissionRequest'
        type: array
      title:
        type: string
    required:
    - description
    - permissions
    - title
    type: object
  gin.DeleteMerchantsRequest:
    properties:
      ids:
        items:
          type: string
        type: array
    type: object
  gin.EthSwitchCallback:
    properties:
      mdOrder:
        type: string
      operation:
        type: string
      orderNumber:
        type: string
      paymentWay:
        type: string
      status:
        type: string
    type: object
  gin.ExportMerchantsRequest:
    properties:
      data:
        items:
          type: string
        type: array
      fileType:
        $ref: '#/definitions/entity.SupportedFileType'
      merchants:
        items:
          type: string
        type: array
    required:
    - data
    - fileType
    - merchants
    type: object
  gin.ImpersonateMerchantRequest:
    properties:
      merchant_id:
        type: string
    type: object
  gin.LoginRequest:
    properties:
      password:
        type: string
      phone_number:
        type: string
      phone_prefix:
        type: string
    required:
    - password
    - phone_number
    - phone_prefix
    type: object
  gin.MPESACallback:
    properties:
      message:
        example: Payment successful
        type: string
      status:
        enum:
        - "0"
        - "1"
        example: "0"
        type: string
      transaction_id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
    required:
    - status
    - transaction_id
    type: object
  gin.MessageResponse:
    properties:
      message:
        type: string
    type: object
  gin.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  gin.RegisterRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      password_hint:
        type: string
      phone_number:
        type: string
      phone_prefix:
        type: string
      title:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - phone_number
    - phone_prefix
    - title
    type: object
  gin.RequestOTPRequest:
    properties:
      phone_number:
        type: string
      phone_prefix:
        type: string
    required:
    - phone_number
    - phone_prefix
    type: object
  gin.ResetPasswordRequest:
    properties:
      new_password:
        type: string
      otp_token:
        type: string
    required:
    - new_password
    - otp_token
    type: object
  gin.SettlementResponse:
    properties:
      message:
        example: Settlement processed successfully
        type: string
    type: object
  gin.TelebirrCallback:
    properties:
      message:
        example: Payment successful
        type: string
      status:
        enum:
        - "0"
        - "1"
        example: "0"
        type: string
      transaction_id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
    required:
    - status
    - transaction_id
    type: object
  gin.UpdateAdminMerchantRequest:
    properties:
      business_info:
        $ref: '#/definitions/entity.UpdateMerchantBusinessInformationRequest'
      documents:
        items:
          $ref: '#/definitions/entity.UpdateMerchantDocumentWithIDRequest'
        type: array
      personal_info:
        $ref: '#/definitions/entity.CreateMerchantPersonalInformationRequest'
    type: object
  gin.UpdateGroupRequest:
    properties:
      description:
        type: string
      permissions:
        items:
          $ref: '#/definitions/entity.CreatePermissionRequest'
        type: array
      title:
        type: string
    type: object
  gin.UpdateMerchantContactRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
    type: object
  gin.UpdateMerchantDocumentRequest:
    properties:
      file_url:
        type: string
      rejection_reason:
        type: string
      status:
        type: string
    type: object
  gin.UpdateMerchantRequest:
    properties:
      business_info:
        $ref: '#/definitions/entity.UpdateMerchantBusinessInformationRequest'
      documents:
        items:
          $ref: '#/definitions/entity.CreateMerchantDocumnetRequest'
        type: array
      personal_info:
        $ref: '#/definitions/entity.CreateMerchantPersonalInformationRequest'
    type: object
  gin.UpdateMerchantStatusRequest:
    properties:
      status:
        type: string
    type: object
  gin.UpdateTeamMemberRequest:
    properties:
      group_id:
        type: string
      user_data:
        $ref: '#/definitions/entity.UpdateUserRequest'
    required:
    - group_id
    - user_data
    type: object
  gin.VerifyOTPRequest:
    properties:
      otp_code:
        type: string
      otp_token:
        type: string
    required:
    - otp_code
    - otp_token
    type: object
  github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ApiError:
    properties:
      message:
        type: string
      type:
        type: string
    type: object
  github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse:
    properties:
      error:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ApiError'
      success:
        type: boolean
    type: object
  github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.SuccessResponse:
    properties:
      data:
        additionalProperties: true
        type: object
      success:
        type: boolean
    type: object
  github_com_socialpay_socialpay_src_pkg_apikey_mgmt_core_entity.APIKey:
    properties:
      can_process_payment:
        type: boolean
      can_withdrawal:
        type: boolean
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      expires_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      last_used_at:
        type: string
      merchant_id:
        type: string
      name:
        type: string
      public_key:
        type: string
      secret_key:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ApiError:
    properties:
      message:
        type: string
      type:
        type: string
    type: object
  github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse:
    properties:
      error:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ApiError'
      success:
        type: boolean
    type: object
  github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.SuccessResponse:
    properties:
      data:
        type: object
      message:
        example: Operation successful
        type: string
      success:
        example: true
        type: boolean
    type: object
  github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Catalog:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      description:
        $ref: '#/definitions/types.NullString'
      id:
        type: string
      merchant_id:
        type: string
      name:
        type: string
      status:
        $ref: '#/definitions/entity.CatalogStatus'
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Customer:
    properties:
      address:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      customer_id:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      id:
        type: string
      loyalty_points:
        type: integer
      merchant_id:
        type: string
      name:
        type: string
      phone:
        type: string
      status:
        $ref: '#/definitions/entity.CustomerStatus'
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.CustomerDetails:
    properties:
      customer_id:
        type: string
      date_of_birth:
        type: string
      first_name:
        type: string
      full_name:
        type: string
      gender:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      sir_name:
        type: string
    type: object
  github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Discount:
    properties:
      description:
        type: string
      type:
        type: string
      value:
        type: number
    type: object
  github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Metadata:
    properties:
      created_at:
        type: string
      notes:
        type: string
      updated_at:
        type: string
    type: object
  github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Order:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      customer_details:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.CustomerDetails'
      id:
        type: string
      merchant_id:
        type: string
      metadata:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Metadata'
      order_details:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.OrderDetails'
      order_items:
        items:
          $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.OrderItem'
        type: array
      tracking:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Tracking'
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.OrderDetails:
    properties:
      billing_address:
        type: string
      currency:
        type: string
      discounts:
        items:
          $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Discount'
        type: array
      final_amount:
        type: number
      medium:
        type: string
      order_type_id:
        type: string
      payment_method:
        type: string
      payment_reference:
        type: string
      payment_status:
        $ref: '#/definitions/entity.PaymentStatus'
      shipping_address:
        type: string
      status:
        $ref: '#/definitions/entity.OrderStatus'
      taxes:
        items:
          $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Tax'
        type: array
      total_amount:
        type: number
    type: object
  github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.OrderItem:
    properties:
      category:
        type: string
      merchant_id:
        type: string
      product_id:
        type: string
      product_name:
        type: string
      quantity:
        type: integer
      sku:
        type: string
      total_price:
        type: number
      unit_price:
        type: number
    type: object
  github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.PaymentMethod:
    properties:
      commission:
        type: number
      created_at:
        type: string
      created_by:
        type: string
      details:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      merchant_id:
        type: string
      name:
        type: string
      type:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Product:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      currency:
        type: string
      description:
        type: string
      dimensions:
        type: string
      id:
        type: string
      image_url:
        type: string
      merchant_id:
        type: string
      name:
        type: string
      price:
        type: number
      sku:
        type: string
      status:
        $ref: '#/definitions/entity.ProductStatus'
      updated_at:
        type: string
      updated_by:
        type: string
      weight:
        type: number
    type: object
  github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Tax:
    properties:
      rate:
        type: number
      type:
        type: string
      value:
        type: number
    type: object
  github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Tracking:
    properties:
      expected_delivery_date:
        type: string
      shipment_id:
        type: string
      status:
        type: string
    type: object
  github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Warehouse:
    properties:
      capacity:
        type: integer
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      location:
        type: string
      merchant_id:
        type: string
      name:
        type: string
      status:
        $ref: '#/definitions/entity.WarehouseStatus'
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse:
    description: Error response with a message
    properties:
      message:
        example: Invalid request parameters
        type: string
      success:
        type: boolean
    type: object
  github_com_socialpay_socialpay_src_pkg_socialpayapi_core_entity.QRPaymentResponse:
    description: Response containing QR payment processing results
    properties:
      socialpay_transaction_id:
        description: SocialPay transaction ID
        example: "1234567890"
        type: string
      message:
        description: Human-readable message about the operation
        example: Payment initiated successfully
        type: string
      payment_url:
        description: URL to redirect the user for payment (if applicable)
        example: https://pay.example.com/checkout
        type: string
      reference_id:
        description: Unique payment reference
        example: PAY123456789
        type: string
      status:
        description: Status of the payment
        example: PENDING
        type: string
      success:
        description: Whether the operation was successful
        example: true
        type: boolean
    type: object
  github_com_socialpay_socialpay_src_pkg_qr_adapter_controller_gin.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  github_com_socialpay_socialpay_src_pkg_rbac_adapter_controller_gin.ApiError:
    properties:
      message:
        type: string
      type:
        type: string
    type: object
  github_com_socialpay_socialpay_src_pkg_rbac_adapter_controller_gin.ErrorResponse:
    properties:
      error:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_rbac_adapter_controller_gin.ApiError'
      success:
        type: boolean
    type: object
  github_com_socialpay_socialpay_src_pkg_rbac_adapter_controller_gin.SuccessResponse:
    properties:
      data: {}
      success:
        type: boolean
    type: object
  github_com_socialpay_socialpay_src_pkg_shared_payment_controller_gin.ErrorResponse:
    properties:
      error:
        example: Invalid transaction ID format
        type: string
    type: object
  github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ApiError:
    properties:
      message:
        type: string
      type:
        type: string
    type: object
  github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse:
    properties:
      error:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ApiError'
      success:
        type: boolean
    type: object
  github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.SuccessResponse:
    properties:
      data: {}
      success:
        type: boolean
    type: object
  github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionMedium:
    description: Payment medium or provider (e.g., MPESA, TELEBIRR)
    enum:
    - SOCIALPAY
    - CYBERSOURCE
    - ETHSWITCH
    - MPESA
    - TELEBIRR
    - CBE
    - AWASH
    - KACHA
    type: string
    x-enum-varnames:
    - SOCIALPAY
    - CYBERSOURCE
    - ETHSWITCH
    - MPESA
    - TELEBIRR
    - CBE
    - AWASH
    - KACHA
  github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionStatus:
    description: Current status of the transaction
    enum:
    - INITIATED
    - PENDING
    - SUCCESS
    - FAILED
    - REFUNDED
    - EXPIRED
    - CANCELED
    type: string
    x-enum-varnames:
    - INITIATED
    - PENDING
    - SUCCESS
    - FAILED
    - REFUNDED
    - EXPIRED
    - CANCELED
  github_com_socialpay_socialpay_src_pkg_transaction_core_entity.TransactionType:
    description: Type of transaction (e.g., SALE, WITHDRAWAL)
    enum:
    - REPLENISHMENT
    - P2P
    - SALE
    - BILL_PAYMENT
    - SETTLEMENT
    - BILL_AIRTIME
    - DEPOSIT
    - WITHDRAWAL
    - REFUND
    type: string
    x-enum-varnames:
    - REPLENISHMENT
    - P2P
    - SALE
    - BILL_PAYMENT
    - SETTLEMENT
    - BILL
    - DEPOSIT
    - WITHDRAWAL
    - REFUND
  github_com_socialpay_socialpay_src_pkg_v2_merchant_adapter_controller_gin.ApiError:
    properties:
      message:
        type: string
      type:
        type: string
    type: object
  github_com_socialpay_socialpay_src_pkg_v2_merchant_adapter_controller_gin.ErrorResponse:
    properties:
      error:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_v2_merchant_adapter_controller_gin.ApiError'
      success:
        type: boolean
    type: object
  github_com_socialpay_socialpay_src_pkg_v2_merchant_adapter_controller_gin.SuccessResponse:
    properties:
      data: {}
      success:
        type: boolean
    type: object
  github_com_socialpay_socialpay_src_pkg_v2_merchant_core_entity.Merchant:
    properties:
      businessRegistrationNumber:
        type: string
      businessType:
        type: string
      createdAt:
        type: string
      establishedDate:
        type: string
      id:
        type: string
      industryCategory:
        type: string
      isBettingCompany:
        type: boolean
      legalName:
        type: string
      lotteryCertificateNumber:
        type: string
      status:
        $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_v2_merchant_core_entity.MerchantStatus'
      taxIdentificationNumber:
        type: string
      tradingName:
        type: string
      updatedAt:
        type: string
      userId:
        type: string
      websiteUrl:
        type: string
    type: object
  github_com_socialpay_socialpay_src_pkg_v2_merchant_core_entity.MerchantStatus:
    enum:
    - pending_verification
    - active
    - inactive
    - suspended
    - terminated
    type: string
    x-enum-varnames:
    - StatusPendingVerification
    - StatusActive
    - StatusInactive
    - StatusSuspended
    - StatusTerminated
  pagination.PaginationInfo:
    properties:
      has_next_page:
        type: boolean
      has_pervious:
        type: boolean
      page:
        minimum: 1
        type: integer
      page_size:
        maximum: 20
        minimum: 1
        type: integer
      total_items:
        type: integer
      total_page:
        type: integer
    required:
    - page
    - page_size
    type: object
  payment.STDCallbackRequest:
    properties:
      message:
        type: string
      providerData:
        type: string
      providerTxId:
        type: string
      referenceId:
        type: string
      status:
        type: string
      timestamp:
        type: string
      type:
        type: string
    type: object
  response.ApiError:
    properties:
      message:
        type: string
      type:
        type: string
    type: object
  response.ErrorResponse:
    properties:
      error:
        $ref: '#/definitions/response.ApiError'
      success:
        type: boolean
    type: object
  response.PaginatedResponse:
    properties:
      data:
        type: object
      pagination:
        $ref: '#/definitions/pagination.PaginationInfo'
      success:
        type: boolean
    type: object
  response.SuccessResponse:
    properties:
      data:
        type: object
      success:
        type: boolean
    type: object
  types.NullString:
    properties:
      string:
        example: sample description
        type: string
      valid:
        example: true
        type: boolean
    type: object
host: 196.190.251.194:8082
info:
  contact:
    email: support@socialpay.com
    name: API Support
    url: http://www.swagger.io/support
  description: SocialPay API V2 documentation
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SocialPay API V2
  version: "2.0"
paths:
  /admin/all:
    get:
      description: Get list of admin team members
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
      summary: Get admin team members
      tags:
      - Team-member-management
  /admin/analytics/chart:
    get:
      consumes:
      - application/json
      description: Get chart data for admin dashboard with comprehensive financial
        information
      parameters:
      - description: Start date (YYYY-MM-DD)
        in: query
        name: start_date
        type: string
      - description: End date (YYYY-MM-DD)
        in: query
        name: end_date
        type: string
      - description: Filter by merchant ID
        in: query
        name: merchant_id
        type: string
      - description: Chart type (daily, weekly, monthly)
        in: query
        name: chart_type
        type: string
      - description: Date unit (day, week, month)
        in: query
        name: date_unit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ChartData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get admin chart data
      tags:
      - Admin Analytics
  /admin/analytics/merchant-growth:
    get:
      consumes:
      - application/json
      description: Get merchant growth statistics and trends
      parameters:
      - description: Start date (YYYY-MM-DD)
        in: query
        name: start_date
        type: string
      - description: End date (YYYY-MM-DD)
        in: query
        name: end_date
        type: string
      - default: month
        description: Date unit (day, week, month)
        in: query
        name: date_unit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.MerchantGrowthAnalytics'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get merchant growth analytics
      tags:
      - Admin Analytics
  /admin/analytics/transactions:
    get:
      consumes:
      - application/json
      description: Get comprehensive transaction analytics for admin with VAT, fees,
        and admin net information
      parameters:
      - description: Start date (YYYY-MM-DD)
        in: query
        name: start_date
        type: string
      - description: End date (YYYY-MM-DD)
        in: query
        name: end_date
        type: string
      - description: Filter by merchant ID
        in: query
        name: merchant_id
        type: string
      - description: Filter by transaction type
        in: query
        name: transaction_type
        type: string
      - description: Filter by status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.AdminTransactionAnalytics'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get admin transaction analytics
      tags:
      - Admin Analytics
  /admin/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate admin credentials and send OTP (super_admin and admin
        only)
      parameters:
      - description: Admin login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.AdminLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP sent successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid credentials or insufficient privileges
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Admin Login
      tags:
      - admin-auth
  /admin/commissions/default:
    get:
      consumes:
      - application/json
      description: Retrieves the default commission settings for all merchants
      produces:
      - application/json
      responses:
        "200":
          description: 'settings: entity.CommissionSettings'
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 'error: unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: error message'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get default commission settings
      tags:
      - admin
    put:
      consumes:
      - application/json
      description: Updates the default commission settings for all merchants
      parameters:
      - description: Commission Settings
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/entity.CommissionSettings'
      produces:
      - application/json
      responses:
        "200":
          description: 'settings: entity.CommissionSettings'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: invalid request'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: error message'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update default commission settings
      tags:
      - admin
  /admin/commissions/merchant/{merchantID}:
    get:
      consumes:
      - application/json
      description: Retrieves the commission settings for a specific merchant
      parameters:
      - description: Merchant ID
        format: uuid
        in: path
        name: merchantID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'commission: entity.MerchantCommission'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: invalid merchant ID'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: error message'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get merchant commission settings
      tags:
      - admin
    put:
      consumes:
      - application/json
      description: Updates the commission settings for a specific merchant
      parameters:
      - description: Merchant ID
        format: uuid
        in: path
        name: merchantID
        required: true
        type: string
      - description: Merchant Commission Settings
        in: body
        name: commission
        required: true
        schema:
          $ref: '#/definitions/entity.MerchantCommission'
      produces:
      - application/json
      responses:
        "200":
          description: 'commission: entity.MerchantCommission'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: invalid request'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: error message'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update merchant commission settings
      tags:
      - admin
  /admin/create:
    post:
      description: Create admin team member
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
      summary: Create Admin team member
      tags:
      - Team-member-management
  /admin/group/:groupId:
    delete:
      description: Delete admin group by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
      summary: Delete admin group
      tags:
      - Team-member-management
    get:
      description: Get admin group by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
      summary: Get admin group
      tags:
      - Team-member-management
    put:
      consumes:
      - application/json
      description: Update admin group by id with optional title, description, and
        permissions
      parameters:
      - description: Group ID
        in: path
        name: groupId
        required: true
        type: string
      - description: Update group details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.UpdateGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
      summary: Update admin group
      tags:
      - Team-member-management
  /admin/group/create:
    post:
      consumes:
      - application/json
      description: Create new admin group with title, description, and set of permissions
      parameters:
      - description: CreateGroup details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.CreateGroupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Group creation successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Group already exists
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create new admin group
      tags:
      - Team-member-management
  /admin/groups:
    get:
      description: Get list of admin groups
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
      summary: Get admin groups
      tags:
      - Team-member-management
  /admin/health/wallet-balance:
    get:
      consumes:
      - application/json
      description: Verifies if wallet balances match transaction history (deposits
        - withdrawals)
      produces:
      - application/json
      responses:
        "200":
          description: 'health_check: WalletHealthCheck'
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 'error: unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: error message'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Check wallet balance health
      tags:
      - admin
  /admin/remove/:userGroupId:
    delete:
      description: Remove admin team member by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
      summary: Remove admin team member
      tags:
      - Team-member-management
  /admin/update/:userGroupId:
    put:
      consumes:
      - application/json
      description: Update admin team member user data and group assignment
      parameters:
      - description: User Group ID
        in: path
        name: userGroupId
        required: true
        type: string
      - description: UpdateTeamMember details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.UpdateTeamMemberRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
      summary: Update admin team member
      tags:
      - Team-member-management
  /admin/wallet:
    get:
      consumes:
      - application/json
      description: Retrieves the admin wallet information including total amount
      produces:
      - application/json
      responses:
        "200":
          description: 'wallet: entity.MerchantWallet, total_amount: float64'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: error message'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: error message'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get admin wallet
      tags:
      - admin
  /all:
    get:
      description: Get list of team members
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
      summary: Get team members
      tags:
      - Team-member-management
  /auth/activities:
    get:
      consumes:
      - application/json
      description: Get authenticated user's authentication activities
      parameters:
      - default: 10
        description: Limit number of activities
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User activities
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get user activities
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user credentials and send OTP
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP sent successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid credentials
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Login user
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Logout user and invalidate session
      produces:
      - application/json
      responses:
        "200":
          description: Logged out successfully
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Logout user
      tags:
      - auth
  /auth/password/verify-otp:
    post:
      consumes:
      - application/json
      description: Verify OTP code and complete reset password
      parameters:
      - description: OTP verification details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.VerifyOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP verified successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid or expired OTP
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Verify OTP
      tags:
      - auth
  /auth/profile:
    get:
      consumes:
      - application/json
      description: Get authenticated user's profile
      produces:
      - application/json
      responses:
        "200":
          description: User profile
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - auth
    put:
      consumes:
      - application/json
      description: Update authenticated user's profile
      parameters:
      - description: Profile updates
        in: body
        name: updates
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Profile updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update user profile
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh access token using refresh token
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Token refreshed successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid refresh token
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Refresh access token
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user account with phone verification
      parameters:
      - description: Registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Phone already exists
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - auth
  /auth/request-otp:
    post:
      consumes:
      - application/json
      description: Users can request otp code for password management
      parameters:
      - description: Request OTP request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.RequestOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP sent successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid credentials or insufficient privileges
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Request OTP
      tags:
      - auth
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Users can reset their password.
      parameters:
      - description: Reset password details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password resetted successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid or expired OTP
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Reset Password
      tags:
      - auth
  /auth/verify-otp:
    post:
      consumes:
      - application/json
      description: Verify OTP code and complete login
      parameters:
      - description: OTP verification details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.VerifyOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid or expired OTP
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Verify OTP
      tags:
      - auth
  /checkout/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve hosted checkout details by ID for the checkout page
      parameters:
      - description: Hosted Checkout ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.HostedCheckoutWithMerchantResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
      summary: Get hosted checkout details
      tags:
      - Payments
  /checkout/makepayment:
    post:
      consumes:
      - application/json
      description: Process payment from hosted checkout page with selected medium
        and phone number
      parameters:
      - description: Checkout payment request details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.CheckoutPaymentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.PaymentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
      summary: Process payment from hosted checkout
      tags:
      - Payments
  /create:
    post:
      description: Create team member
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
      summary: Create team member
      tags:
      - Team-member-management
  /erp/catalogs:
    get:
      consumes:
      - application/json
      description: Get a list of catalogs from the ERP system with pagination
      parameters:
      - description: Merchant ID
        in: query
        name: merchantID
        type: string
      - default: 0
        description: Number of items to skip
        in: query
        name: skip
        type: integer
      - default: 10
        description: Number of items to take
        in: query
        name: take
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/entity.CatalogsResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get a list of catalogs
      tags:
      - Catalogs
    post:
      consumes:
      - application/json
      description: Create a new catalog in the ERP system
      parameters:
      - description: Catalog creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.CreateCatalogRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Catalog'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new catalog
      tags:
      - Catalogs
  /erp/catalogs/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a catalog from the ERP system by its ID
      parameters:
      - description: Catalog ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a catalog by ID
      tags:
      - Catalogs
    get:
      consumes:
      - application/json
      description: Get a catalog from the ERP system by their ID
      parameters:
      - description: Catalog ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Catalog'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get a catalog by ID
      tags:
      - Catalogs
    put:
      consumes:
      - application/json
      description: Update an existing catalog in the ERP system by its ID
      parameters:
      - description: Catalog ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Catalog update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.UpdateCatalogRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update an existing catalog
      tags:
      - Catalogs
  /erp/customers:
    get:
      consumes:
      - application/json
      description: Get a list of customers from the ERP system with pagination
      parameters:
      - description: Merchant ID
        in: query
        name: merchantID
        required: true
        type: string
      - description: Number of items to skip
        in: query
        name: skip
        type: integer
      - description: Number of items to take
        in: query
        name: take
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CustomersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get a list of customers
      tags:
      - Customers
    post:
      consumes:
      - application/json
      description: Create a new customer in the ERP system
      parameters:
      - description: Customer creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.CreateCustomerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Customer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new customer
      tags:
      - Customers
  /erp/customers/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a customer from the ERP system by their ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a customer by ID
      tags:
      - Customers
    get:
      consumes:
      - application/json
      description: Get a customer from the ERP system by their ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Customer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get a customer by ID
      tags:
      - Customers
    put:
      consumes:
      - application/json
      description: Update an existing customer in the ERP system by their ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      - description: Customer update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.UpdateCustomerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update an existing customer
      tags:
      - Customers
  /erp/orders:
    get:
      consumes:
      - application/json
      description: Get a list of orders from the ERP system with pagination
      parameters:
      - description: Merchant ID
        in: query
        name: merchantID
        required: true
        type: string
      - description: Number of items to skip
        in: query
        name: skip
        type: integer
      - description: Number of items to take
        in: query
        name: take
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.OrdersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get a list of orders
      tags:
      - Orders
    post:
      consumes:
      - application/json
      description: Create a new order in the ERP system
      parameters:
      - description: Order creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.CreateOrderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new order
      tags:
      - Orders
  /erp/orders/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an order from the ERP system by its ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete an order by ID
      tags:
      - Orders
    get:
      consumes:
      - application/json
      description: Get an order from the ERP system by its ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get an order by ID
      tags:
      - Orders
    put:
      consumes:
      - application/json
      description: Update an existing order in the ERP system by its ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: Order update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.UpdateOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update an existing order
      tags:
      - Orders
  /erp/payment-methods:
    get:
      consumes:
      - application/json
      description: Get a list of payment methods from the ERP system with pagination
      parameters:
      - description: Merchant ID
        in: query
        name: merchantID
        required: true
        type: string
      - description: Number of items to skip
        in: query
        name: skip
        type: integer
      - description: Number of items to take
        in: query
        name: take
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.PaymentMethodsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get a list of payment methods
      tags:
      - Payment Methods
    post:
      consumes:
      - application/json
      description: Create a new payment method in the ERP system
      parameters:
      - description: Payment method creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.CreatePaymentMethodRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.PaymentMethod'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new payment method
      tags:
      - Payment Methods
  /erp/payment-methods/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a payment method from the ERP system by its ID
      parameters:
      - description: Payment Method ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a payment method by ID
      tags:
      - Payment Methods
    get:
      consumes:
      - application/json
      description: Get a payment method from the ERP system by its ID
      parameters:
      - description: Payment Method ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.PaymentMethod'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get a payment method by ID
      tags:
      - Payment Methods
    put:
      consumes:
      - application/json
      description: Update an existing payment method in the ERP system by its ID
      parameters:
      - description: Payment Method ID
        in: path
        name: id
        required: true
        type: string
      - description: Payment method update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.UpdatePaymentMethodRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update an existing payment method
      tags:
      - Payment Methods
  /erp/products:
    get:
      consumes:
      - application/json
      description: Get a list of products from the ERP system with pagination
      parameters:
      - description: Merchant ID
        in: query
        name: merchantID
        required: true
        type: string
      - description: Number of items to skip
        in: query
        name: skip
        type: integer
      - description: Number of items to take
        in: query
        name: take
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ProductsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get a list of products
      tags:
      - Products
    post:
      consumes:
      - application/json
      description: Create a new product in the ERP system
      parameters:
      - description: Product creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.CreateProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new product
      tags:
      - Products
  /erp/products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product from the ERP system by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a product by ID
      tags:
      - Products
    get:
      consumes:
      - application/json
      description: Get a product from the ERP system by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get a product by ID
      tags:
      - Products
    put:
      consumes:
      - application/json
      description: Update an existing product in the ERP system by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Product update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.UpdateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update an existing product
      tags:
      - Products
  /erp/warehouses:
    get:
      consumes:
      - application/json
      description: Get a list of warehouses from the ERP system with pagination
      parameters:
      - description: Merchant ID
        in: query
        name: merchantID
        required: true
        type: string
      - description: Number of items to skip
        in: query
        name: skip
        type: integer
      - description: Number of items to take
        in: query
        name: take
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.WarehousesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get a list of warehouses
      tags:
      - Warehouses
    post:
      consumes:
      - application/json
      description: Create a new warehouse in the ERP system
      parameters:
      - description: Warehouse creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.CreateWarehouseRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Warehouse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new warehouse
      tags:
      - Warehouses
  /erp/warehouses/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a warehouse from the ERP system by its ID
      parameters:
      - description: Warehouse ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a warehouse by ID
      tags:
      - Warehouses
    get:
      consumes:
      - application/json
      description: Get a warehouse from the ERP system by its ID
      parameters:
      - description: Warehouse ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_core_entity.Warehouse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get a warehouse by ID
      tags:
      - Warehouses
    put:
      consumes:
      - application/json
      description: Update an existing warehouse in the ERP system by its ID
      parameters:
      - description: Warehouse ID
        in: path
        name: id
        required: true
        type: string
      - description: Warehouse update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.UpdateWarehouseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_erp_v2_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update an existing warehouse
      tags:
      - Warehouses
  /file/upload:
    post:
      consumes:
      - application/json
      description: Uploads single file to the system
      produces:
      - application/json
      responses:
        "201":
          description: File uploaded successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Upload single file
      tags:
      - file
  /group/:groupId:
    delete:
      description: Delete group by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
      summary: Get group
      tags:
      - Team-member-management
    get:
      description: Get group by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
      summary: Get group
      tags:
      - Team-member-management
    put:
      consumes:
      - application/json
      description: Update group by id with optional title, description, and permissions
      parameters:
      - description: Group ID
        in: path
        name: groupId
        required: true
        type: string
      - description: Update group details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.UpdateGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
      summary: Update group
      tags:
      - Team-member-management
  /group/create:
    post:
      consumes:
      - application/json
      description: Create new group with title, description, and set of permissions
      parameters:
      - description: CreateGroup details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.CreateGroupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Group creation successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Group already exists
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create new group
      tags:
      - Team-member-management
  /groups:
    get:
      description: Get list of groups
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
      summary: Get groups
      tags:
      - Team-member-management
  /keys:
    get:
      description: List all API keys for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.APIKeyResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List API keys
      tags:
      - apikeys
    post:
      consumes:
      - application/json
      description: Create a new API key for a merchant
      parameters:
      - description: API key creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.CreateAPIKeyRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.APIKeyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create API key
      tags:
      - apikeys
  /keys/{id}:
    delete:
      description: Delete an existing API key
      parameters:
      - description: API key ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete API key
      tags:
      - apikeys
    get:
      description: Get an API key by ID
      parameters:
      - description: API key ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.APIKeyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get API key
      tags:
      - apikeys
    patch:
      consumes:
      - application/json
      description: Update an existing API key
      parameters:
      - description: API key ID
        in: path
        name: id
        required: true
        type: string
      - description: API key update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.UpdateAPIKeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.APIKeyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update API key
      tags:
      - apikeys
  /keys/{id}/rotate:
    post:
      description: Generate a new secret for an API key
      parameters:
      - description: API key ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.APIKeyRotateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Rotate API key secret
      tags:
      - apikeys
  /merchant/ip-whitelist:
    get:
      consumes:
      - application/json
      description: Retrieves the IP whitelist for the authenticated merchant
      produces:
      - application/json
      responses:
        "200":
          description: 'whitelist: entity.IPWhitelist'
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 'error: unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: error message'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get merchant IP whitelist
      tags:
      - merchant
    post:
      consumes:
      - application/json
      description: Create the IP whitelist for the authenticated merchant
      parameters:
      - description: IP Whitelist Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controller.CreateIPWhitelistRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'message: IP whitelist created successfully'
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 'error: unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: error message'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create merchant IP whitelist
      tags:
      - merchant
  /merchant/ip-whitelist/:id:
    delete:
      consumes:
      - application/json
      description: Deletes the IP whitelist for the authenticated merchant
      produces:
      - application/json
      responses:
        "200":
          description: 'message: IP whitelist deleted successfully'
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 'error: unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: error message'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete merchant IP whitelist
      tags:
      - merchant
    put:
      consumes:
      - application/json
      description: Updates the IP whitelist for the authenticated merchant
      parameters:
      - description: IP Whitelist Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateIPWhitelistRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'whitelist: entity.IPWhitelist'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: invalid request'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: error message'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update merchant IP whitelist
      tags:
      - merchant
  /merchants/:id:
    get:
      description: Get a merchant by its ID
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_v2_merchant_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_v2_merchant_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_v2_merchant_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_v2_merchant_adapter_controller_gin.ErrorResponse'
      summary: Get merchant by ID
      tags:
      - v2-merchants
  /merchants/:id/details:
    get:
      description: Get complete merchant information with related data by ID
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_v2_merchant_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_v2_merchant_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_v2_merchant_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_v2_merchant_adapter_controller_gin.ErrorResponse'
      summary: Get merchant details by ID
      tags:
      - v2-merchants
  /merchants/admin/add:
    post:
      consumes:
      - application/json
      description: Adds new with phone verification
      parameters:
      - description: AddMerchant details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.AddMerchantRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Phone already exists
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Adds new merchant
      tags:
      - v2-merchants
  /merchants/admin/contact/update/:id:
    put:
      consumes:
      - application/json
      description: Update merchant contact informations
      parameters:
      - description: UpdateMerchantContact details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.UpdateMerchantContactRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Merchant contact updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update merchant contact
      tags:
      - v2-merchants
  /merchants/admin/delete/:id:
    delete:
      consumes:
      - application/json
      description: Admin deletes merchant
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Merchant deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Merchant not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete merchant by admin
      tags:
      - v2-merchants
  /merchants/admin/delete/all:
    delete:
      consumes:
      - application/json
      description: Admin deletes list of merchants
      parameters:
      - description: DeleteMerchants details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.DeleteMerchantsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Merchantd deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Merchant not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete merchants by admin
      tags:
      - v2-merchants
  /merchants/admin/document/update/:id:
    put:
      consumes:
      - application/json
      description: Update merchant document informations
      parameters:
      - description: UpdateMerchantContact details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.UpdateMerchantDocumentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Merchant document updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update merchant document
      tags:
      - v2-merchants
  /merchants/admin/export:
    post:
      consumes:
      - application/json
      description: Export list of merchants
      parameters:
      - description: ExportMerchants details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.ExportMerchantsRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Merchants exported successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Phone already exists
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Export merchants
      tags:
      - v2-merchants
  /merchants/admin/impersonate:
    post:
      consumes:
      - application/json
      description: Admins can impersonate specific merchant
      parameters:
      - description: ImpersonateMerchantRequest details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.ImpersonateMerchantRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Merchant impersonated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Admins impersonates specific merchant
      tags:
      - v2-merchants
  /merchants/admin/stats:
    get:
      consumes:
      - application/json
      description: Get merchant statistics for admin dashboard
      produces:
      - application/json
      responses:
        "200":
          description: Merchant statistics
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get merchant statistics
      tags:
      - v2-merchants
  /merchants/admin/status/update/:id:
    put:
      consumes:
      - application/json
      description: Update merchant status
      parameters:
      - description: UpdateMerchantStatus details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.UpdateMerchantStatusRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Merchant status updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update merchant status
      tags:
      - v2-merchants
  /merchants/admin/update/:id:
    put:
      consumes:
      - application/json
      description: Update merchant information, contact information and documents
        by admin
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: string
      - description: UpdateAdminMerchant details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.UpdateAdminMerchantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Merchant updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Merchant not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update merchant by admin
      tags:
      - v2-merchants
  /merchants/all:
    get:
      description: Get a list of merchants
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_v2_merchant_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_v2_merchant_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_v2_merchant_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_v2_merchant_adapter_controller_gin.ErrorResponse'
      summary: Get merchants
      tags:
      - v2-merchants
  /merchants/update:
    put:
      consumes:
      - application/json
      description: Update merchant informations
      parameters:
      - description: UpdateMerchant details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.UpdateMerchantRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Merchants updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update merchant
      tags:
      - v2-merchants
  /payment/checkout:
    post:
      consumes:
      - application/json
      description: Create a hosted checkout session for payment processing
      parameters:
      - description: Hosted checkout request details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.HostedCheckoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.PaymentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create hosted checkout
      tags:
      - Payments
  /payment/checkout/{id}:
    patch:
      consumes:
      - application/json
      description: Update hosted checkout details (only allowed when status is PENDING
        and not expired)
      parameters:
      - description: Hosted Checkout ID
        in: path
        name: id
        required: true
        type: string
      - description: Update request details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.UpdateHostedCheckoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.PaymentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update hosted checkout
      tags:
      - Payments
  /payment/direct:
    post:
      consumes:
      - application/json
      description: Process a direct payment transaction with the specified details
      parameters:
      - description: Payment request details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.DirectPaymentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.PaymentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Process a direct payment
      tags:
      - Payments
  /payment/receipt/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific transaction by ID
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.TransactionResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
      summary: Get transaction details
      tags:
      - Transactions
  /payment/transaction/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific transaction by ID
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.TransactionResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
      summary: Get transaction details
      tags:
      - Transactions
  /payment/withdrawal:
    post:
      consumes:
      - application/json
      description: Process a withdrawal request for the specified amount
      parameters:
      - description: Withdrawal request details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.WithdrawalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.PaymentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Request a withdrawal
      tags:
      - Payments
  /public/keys/validate:
    post:
      consumes:
      - application/json
      description: Validate an API key with public and secret keys
      parameters:
      - description: API key validate request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.APIKeyValidateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.APIKeyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_apikey_mgmt_adapter_controller_gin.ErrorResponse'
      summary: Validate API key
      tags:
      - apikeys
  /qr/callback:
    post:
      consumes:
      - application/json
      description: Handle callback from payment processors for QR payments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Handle QR payment callback
      tags:
      - QR-Payments
  /qr/payment/link/{id}:
    get:
      consumes:
      - application/json
      description: Get QR link details for payment processing (public endpoint)
      parameters:
      - description: QR Link ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.QRLinkResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
      summary: Get QR link for payment
      tags:
      - QR-Payments
    post:
      consumes:
      - application/json
      description: Process a payment using QR link
      parameters:
      - description: QR Link ID
        in: path
        name: id
        required: true
        type: string
      - description: QR payment request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.QRPaymentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_core_entity.QRPaymentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
      summary: Process QR payment
      tags:
      - QR-Payments
  /qr/payment/merchant:
    post:
      consumes:
      - application/json
      description: Process a QR payment transaction from checkout page
      parameters:
      - description: QR Payment request details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.QRMerchantPaymentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_core_entity.QRPaymentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_socialpayapi_adapter_controller_gin.ErrorResponse'
      summary: Process a QR payment for merchant
      tags:
      - QR-Payments
  /qr_mgmt/links:
    get:
      consumes:
      - application/json
      description: Get paginated list of QR payment links for authenticated user
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Items per page (default: 10)'
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.QRLinksListResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_qr_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_qr_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get QR payment links
      tags:
      - QR-Management
    post:
      consumes:
      - application/json
      description: Create a new QR payment link for merchant
      parameters:
      - description: QR link creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.CreateQRLinkRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.QRLinkResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_qr_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_qr_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_qr_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create QR payment link
      tags:
      - QR-Management
  /qr_mgmt/links/{id}:
    delete:
      consumes:
      - application/json
      description: Delete (deactivate) a QR payment link
      parameters:
      - description: QR Link ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_qr_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_qr_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_qr_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_qr_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete QR payment link
      tags:
      - QR-Management
    get:
      consumes:
      - application/json
      description: Get QR payment link details by ID
      parameters:
      - description: QR Link ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.QRLinkResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_qr_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_qr_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_qr_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get QR payment link
      tags:
      - QR-Management
    put:
      consumes:
      - application/json
      description: Update an existing QR payment link
      parameters:
      - description: QR Link ID
        in: path
        name: id
        required: true
        type: string
      - description: QR link update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.UpdateQRLinkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.QRLinkResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_qr_adapter_controller_gin.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_qr_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_qr_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_qr_adapter_controller_gin.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update QR payment link
      tags:
      - QR-Management
  /rbac/resources:
    get:
      description: Get list of resources
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_rbac_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_rbac_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_rbac_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_rbac_adapter_controller_gin.ErrorResponse'
      summary: Get resources
      tags:
      - v2-rbac
  /remove/:userGroupId:
    delete:
      description: Remove team member by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
      summary: Remove team member
      tags:
      - Team-member-management
  /settle/awash:
    post:
      consumes:
      - application/json
      description: Process Awash settlement callback
      parameters:
      - description: Awash settlement callback data
        in: body
        name: callback
        required: true
        schema:
          $ref: '#/definitions/gin.AwashCallback'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.SettlementResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_shared_payment_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_shared_payment_controller_gin.ErrorResponse'
        "501":
          description: Not Implemented
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_shared_payment_controller_gin.ErrorResponse'
      summary: Handle Awash settlement
      tags:
      - Settlement
  /settle/cbe:
    post:
      consumes:
      - application/json
      description: Process CBE payment callback and update transaction status
      parameters:
      - description: CBE callback data
        in: body
        name: callback
        required: true
        schema:
          $ref: '#/definitions/payment.STDCallbackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.SettlementResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_shared_payment_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_shared_payment_controller_gin.ErrorResponse'
      summary: Handle CBE payment settlement
      tags:
      - Settlement
  /settle/cybersource:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Process Cybersource payment callback and update transaction status
      parameters:
      - description: Transaction UUID
        in: formData
        name: req_transaction_uuid
        required: true
        type: string
      - description: Reason code from Cybersource
        in: formData
        name: reason_code
        required: true
        type: string
      - description: Decision from Cybersource (ACCEPT/DECLINE/CANCEL)
        in: formData
        name: decision
        required: true
        type: string
      - description: List of signed fields
        in: formData
        name: signed_field_names
        required: true
        type: string
      - description: Request signature
        in: formData
        name: signature
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.SettlementResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_shared_payment_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_shared_payment_controller_gin.ErrorResponse'
      summary: Handle Cybersource payment settlement
      tags:
      - Settlement
  /settle/epg/payment:
    post:
      consumes:
      - application/json
      description: process the ethswtich callback
      parameters:
      - description: ethswitch callback body
        in: body
        name: callback
        required: true
        schema:
          $ref: '#/definitions/gin.EthSwitchCallback'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.SettlementResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_shared_payment_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_shared_payment_controller_gin.ErrorResponse'
      summary: Handle the ethswitch settlemnet
      tags:
      - Settlement
  /settle/mpesa:
    post:
      consumes:
      - application/json
      description: Process M-PESA payment callback and update transaction status
      parameters:
      - description: M-PESA callback data
        in: body
        name: callback
        required: true
        schema:
          $ref: '#/definitions/gin.MPESACallback'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.SettlementResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_shared_payment_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_shared_payment_controller_gin.ErrorResponse'
      summary: Handle M-PESA payment settlement
      tags:
      - Settlement
  /settle/std:
    post:
      consumes:
      - application/json
      description: Process payment callback and update transaction status
      parameters:
      - description: Settlement callback data
        in: body
        name: callback
        required: true
        schema:
          $ref: '#/definitions/payment.STDCallbackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.SettlementResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_shared_payment_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_shared_payment_controller_gin.ErrorResponse'
      summary: Handle payment settlement
      tags:
      - Settlement
  /settle/telebirr:
    post:
      consumes:
      - application/json
      description: Process Telebirr payment callback and update transaction status
      parameters:
      - description: Telebirr callback data
        in: body
        name: callback
        required: true
        schema:
          $ref: '#/definitions/gin.TelebirrCallback'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.SettlementResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_shared_payment_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_shared_payment_controller_gin.ErrorResponse'
      summary: Handle Telebirr payment settlement
      tags:
      - Settlement
  /transactions/analytics:
    post:
      consumes:
      - application/json
      description: Get aggregated transaction analytics with filters and period comparison
      parameters:
      - description: Analytics filter parameters
        in: body
        name: analyticsFilter
        required: true
        schema:
          $ref: '#/definitions/entity.AnalyticsFilter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/entity.TransactionAnalytics'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get transaction analytics
      tags:
      - transactions
  /transactions/chart:
    post:
      consumes:
      - application/json
      description: Get chart data for transaction analytics with date aggregation
      parameters:
      - description: Chart filter parameters
        in: body
        name: chartFilter
        required: true
        schema:
          $ref: '#/definitions/entity.ChartFilter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/entity.ChartData'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get transaction chart data
      tags:
      - transactions
  /transactions/data/export:
    post:
      consumes:
      - application/json
      description: export the transaction data with pdf format. Use date format YYYY-MM-DD
        (e.g. 2023-01-01)
      parameters:
      - description: request body with date format YYYY-MM-DD
        in: body
        name: filterParameter
        required: true
        schema:
          $ref: '#/definitions/entity.FilterParameters'
      - description: page number
        in: query
        name: page
        required: true
        type: integer
      - description: page size
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/pdf
      responses:
        "200":
          description: PDF file
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: exporting transaction data
      tags:
      - transactions
  /transactions/history:
    get:
      consumes:
      - application/json
      description: get transacton history
      parameters:
      - description: page number
        in: query
        name: page
        required: true
        type: integer
      - description: page size
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: get transactions
      tags:
      - transactions
    post:
      consumes:
      - application/json
      description: get transacton history with given specific parameter. Use date
        format YYYY-MM-DD (e.g. 2023-01-01)
      parameters:
      - description: request body with date format YYYY-MM-DD
        in: body
        name: filterParameter
        required: true
        schema:
          $ref: '#/definitions/entity.FilterParameters'
      - description: page number
        in: query
        name: page
        required: true
        type: integer
      - description: page size
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: get transaction by specific filter parameter
      tags:
      - transactions
  /transactions/override/{transactionID}:
    post:
      consumes:
      - multipart/form-data
      description: Override the status of a transaction with admin approval
      parameters:
      - description: Transaction ID
        format: uuid
        in: path
        name: transactionID
        required: true
        type: string
      - description: New status (INITIATED, PENDING, SUCCESS, FAILED, REFUNDED, EXPIRED,
          CANCELED)
        in: formData
        name: status
        required: true
        type: string
      - description: Reason for override (minimum 10 characters)
        in: formData
        name: reason
        required: true
        type: string
      - description: Admin ID
        format: uuid
        in: formData
        name: adminID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Override transaction status
      tags:
      - transactions
  /update/:userGroupId:
    put:
      consumes:
      - application/json
      description: Update team member user data and group assignment
      parameters:
      - description: User Group ID
        in: path
        name: userGroupId
        required: true
        type: string
      - description: UpdateTeamMember details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/gin.UpdateTeamMemberRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_socialpay_socialpay_src_pkg_team_member_adapter_controller_gin.ErrorResponse'
      summary: Update team member
      tags:
      - Team-member-management
  /wallet:
    get:
      consumes:
      - application/json
      description: Get the wallet information for the authenticated merchant
      produces:
      - application/json
      responses:
        "200":
          description: Wallet information
          schema:
            $ref: '#/definitions/controller.WalletResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
        "404":
          description: Wallet Not Found
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      security:
      - BearerAuth: []
      - MerchantID: []
      summary: Get merchant wallet
      tags:
      - wallet
  /webhooks/callback:
    get:
      consumes:
      - application/json
      description: Retrieves all callback logs ordered by creation date
      parameters:
      - description: 'Page number (min: 1)'
        in: query
        name: page
        required: true
        type: integer
      - description: 'Number of items per page (min: 1, max: 100)'
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PaginatedResponse'
        "400":
          description: 'error: error message'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: error message'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all callback logs
      tags:
      - webhooks
    post:
      consumes:
      - application/json
      description: Receives a webhook callback and produces an event to Kafka
      parameters:
      - description: Webhook callback payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.WebhookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'status: success'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: error message'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: error message'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Receive webhook callback
      tags:
      - webhooks
  /webhooks/callback/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves a specific callback log by its ID
      parameters:
      - description: Callback Log ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CallbackLog'
        "400":
          description: 'error: error message'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: error message'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: error message'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get callback log by ID
      tags:
      - webhooks
  /webhooks/callback/merchant:
    get:
      consumes:
      - application/json
      description: Retrieves all callback logs for the merchant associated with the
        API key. The merchant ID is automatically determined from the API key context.
      parameters:
      - description: 'Page number (min: 1)'
        in: query
        name: page
        required: true
        type: integer
      - description: 'Number of items per page (min: 1, max: 100)'
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PaginatedResponse'
        "400":
          description: 'error: invalid merchant ID'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get callback logs for authenticated merchant
      tags:
      - webhooks
security:
- BearerAuth: []
securityDefinitions:
  ApiKeyAuth:
    description: API key authentication for API key management endpoints
    in: header
    name: X-API-Key
    type: apiKey
  BearerAuth:
    description: 'Bearer token authentication for protected endpoints. Use format:
      "Bearer {token}"'
    in: header
    name: Authorization
    type: apiKey
  MerchantID:
    description: Merchant ID authentication for merchant endpoints
    in: header
    name: X-MERCHANT-ID
    type: apiKey
swagger: "2.0"
